@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

skinparam arrowFontSize 17

Person(customer, "Customer", "Places orders, views available products")
Person(admin, "Admin", "Manages product catalog, user accounts")

System_Boundary(system, "Product Ordering") {
    Container(orderApi, "Product Ordering API", "Java Spring Boot REST API", "Handles orders and manages their lifecycle")
    Container(catalogApi, "Product Catalog API", "Java Spring Boot REST API", "Provides product information")
    Container(inventoryApi, "Product Inventory API", "Java Spring Boot REST API", "Manages realized products")
    Container(userApi, "User API", "Java Spring Boot REST API", "Manages user information")
    Container(geoApi, "Geographic Address API", "Java Spring Boot REST API", "Provides address information")
    Container(qualificationApi, "Product Qualification API", "Java Spring Boot REST API", "Provides product availability information")
    Container(billingApi, "Billing API", "Java Spring Boot REST API", "Provides billing information and manages payments")
    Container(emailApi, "Email API", "Java Spring Boot REST API", "Sends order update emails")
    Container(reportingApi, "Reporting API", "Java Spring Boot REST API", "Provides reporting information")
    Container(adminGui, "Admin GUI", "JavaScript, Angular", "Manages users and products")
    Container(customerGui, "Customer GUI", "JavaScript, Angular", "Customer access point")
    ContainerDb(postgresDb, "PostgreSQL", "SQL Database", "Stores user info, product info, order info, etc.")
}

System_Ext(paymentService, "Payment Gateway", "Processes payments")
System_Ext(emailService, "Email Service", "Sends order update emails")

Lay_D(admin,customer)
Lay_D(emailService,paymentService)
Lay_D(admin,emailService)
Lay_D(customer,emailService)

Lay_D(orderApi,catalogApi)
Lay_D(catalogApi,inventoryApi)
Lay_D(inventoryApi,userApi)
Lay_D(geoApi,qualificationApi)
Lay_R(orderApi,billingApi)
Lay_D(billingApi,emailApi)
Lay_D(emailApi,reportingApi)
Lay_D(adminGui, customerGui)

Lay_R(billingApi,postgresDb)

Rel_L(orderApi, catalogApi, "Gets product information from")
Rel_L(orderApi, inventoryApi, "Stores realized products in")
Rel(orderApi, userApi, "Gets user information from")
Rel(orderApi, geoApi, "Gets address information from")
Rel_L(orderApi, qualificationApi, "Gets product availability information from")
Rel_L(orderApi, billingApi, "Executes payments using")
Rel(orderApi, emailApi, "Sends emails using")
Rel_L(orderApi, reportingApi, "Generates invoices using")

Rel(orderApi, postgresDb, "Stores data in")
Rel(catalogApi, postgresDb, "Stores data in")
Rel(inventoryApi, postgresDb, "Stores data in")
Rel(userApi, postgresDb, "Stores data in")
Rel(geoApi, postgresDb, "Stores data in")
Rel(qualificationApi, postgresDb, "Stores data in")
Rel(billingApi, postgresDb, "Stores data in")
Rel(emailApi, postgresDb, "Stores data in")
Rel(reportingApi, postgresDb, "Stores data in")

Rel(customer, customerGui, "Uses")
Rel(admin, adminGui, "Uses")

Rel(customerGui, orderApi, "Places orders using")
Rel(adminGui, catalogApi, "Manages products using")
Rel(adminGui, userApi, "Manages users using")
Rel(adminGui, geoApi, "Manages addresses using")

Rel(billingApi, paymentService, "Processes payments using")
Rel(emailApi, emailService, "Sends emails using")
Rel(emailService, customer, "Sends order updates to")

@enduml